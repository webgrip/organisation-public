name: Terraform CI/CD

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true
  workflow_dispatch:

name: Terraform CI/CD

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [staging]

    env:
      AWS_REGION: 'eu-west-1'
      VPC_CIDR_BLOCK: ${{ matrix.environment == 'staging' && '10.0.0.0/16' || '10.1.0.0/16' }}
      PUBLIC_SUBNET_CIDRS: ${{ matrix.environment == 'staging' && '["10.0.1.0/24","10.0.2.0/24"]' || '["10.1.1.0/24","10.1.2.0/24"]' }}
      PRIVATE_SUBNET_CIDRS: ${{ matrix.environment == 'staging' && '["10.0.101.0/24","10.0.102.0/24"]' || '["10.1.101.0/24","10.1.102.0/24"]' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'

      - name: Terraform Init
        working-directory: ops/terraform/envs/${{ matrix.environment }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ops/terraform/envs/${{ matrix.environment }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ops/terraform/envs/${{ matrix.environment }}
        run: |
          terraform plan -out=tfplan -input=false \
            -var="environment=${{ matrix.environment }}" \
            -var="cluster_name=${{ matrix.environment }}-eks-cluster" \
            -var="region=${{ env.AWS_REGION }}" \
            -var="vpc_cidr_block=${{ env.VPC_CIDR_BLOCK }}" \
            -var='public_subnet_cidrs=${{ env.PUBLIC_SUBNET_CIDRS }}' \
            -var='private_subnet_cidrs=${{ env.PRIVATE_SUBNET_CIDRS }}'

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        working-directory: ops/terraform/envs/${{ matrix.environment }}
        run: terraform apply -input=false tfplan
