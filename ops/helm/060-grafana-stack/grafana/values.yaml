namespace: grafana-stack

grafana:
  replicas: 2

  ingress:
    enabled: true
    ingressClassName: ingress-traefik
    annotations:
      traefik.ingress.kubernetes.io/router.middlewares: "ingress-traefik-ryan-basic-auth@kubernetescrd"
      cert-manager.io/cluster-issuer: letsencrypt-traefik
    tls:
      - secretName: letsencrypt-prod-grafana
        hosts:
          - grafana.staging.k8s.webgrip.nl
    hosts:
      - grafana.staging.k8s.webgrip.nl


  adminUser: admin
  adminPassword: password

#  adminUser: admin
#  admin:
#    existingSecret: grafana-admin
#    userKey:
#    passwordKey:

  persistence:
    storageClassName: do-block-storage
    enabled: true
    size: 10Gi

  plugins:
    - grafana-lokiexplore-app
    - grafana-exploretraces-app
    - grafana-pyroscope-app
    - alexanderzobnin-zabbix-app

  service:
    type: ClusterIP
    port: 80


  datasources:
    datasources.yml:
      apiVersion: 1
      datasources:
        - name: grafana-stack-loki
          uid: grafana-stack-loki
          type: loki
          access: proxy
          url: http://loki.grafana-stack.svc.cluster.local:3100
          editable: true
          jsonData:
            maxLines: 1000
            derivedFields:
              - datasourceUid: grafana-stack-tempo
                matcherType: label
                matcherRegex: trace_id
                name: TraceID
                # url will be interpreted as query for the datasource
                url: '$${__value.raw}'
                urlDisplayLabel: 'View Trace'
            httpHeaderName1: "X-Scope-OrgID"
          secureJsonData:
            httpHeaderValue1: "fake"

        - name: grafana-stack-tempo
          uid: grafana-stack-tempo
          type: tempo
          access: proxy
          url: http://tempo.grafana-stack.svc.cluster.local:3100
          editable: true
          jsonData:
            tracesToLogsV2:
              datasourceUid: 'grafana-stack-loki'
              spanStartTimeShift: '-1h'
              spanEndTimeShift: '1h'
              filterByTraceID: false
              filterBySpanID: false
              customQuery: true
              query: '{$${__tags}} | trace_id = "$${__trace.traceId}"'
              tags:
                - key: 'service.name'
                  value: 'service_name'

        - name: kube-prometheus-stack-prometheus
          uid: kube-prometheus-stack-prometheus
          type: prometheus
          access: proxy
          url: http://kube-prometheus-stack-prometheus.kube-prometheus-stack.svc.cluster.local:9090
          editable: true
