namespace: grafana-stack

alloy:
  alloy:
    mounts:
      varlog: true
      dockercontainers: true
    stabilityLevel: "experimental"
    configMap:
      create: true
      content: |-
        otelcol.receiver.otlp "otlp" {
          grpc {
            endpoint = "0.0.0.0:4317"
          }
          http {
            endpoint = "0.0.0.0:4318"
          }

          output {
            logs    = [otelcol.processor.batch.logs_pipeline.logs.input]
            metrics = [otelcol.processor.memory_limiter.limiter.metrics.input]
            traces  = [otelcol.processor.memory_limiter.limiter.traces.input]
          }
        }

        otelcol.processor.memory_limiter "limiter" {
          check_interval         = "1s"
          limit_percentage       = 70
          spike_limit_percentage = 20

          output {
            metrics = [otelcol.processor.batch.main.metrics.input]
            traces  = [otelcol.processor.batch.main.traces.input]
          }
        }

        otelcol.processor.batch "main" {
          send_batch_size     = 1024
          send_batch_max_size = 2048
          timeout             = "10s"

          output {
            metrics = [prometheus.remote_write.incluster]
            traces  = [otelcol.exporter.otlp.tempo]
          }
        }

        otelcol.processor.batch "logs_pipeline" {
          send_batch_size     = 1024
          send_batch_max_size = 2048
          timeout             = "10s"

          output {
            logs = [loki.write.incluster]
          }
        }

        loki.write "incluster" {
          endpoint {
            url = "http://loki.grafana-stack.svc.cluster.local:3100/loki/api/v1/push"
          }
        }

        prometheus.remote_write "incluster" {
          endpoint {
            url = "http://kube-prometheus-stack-prometheus.kube-prometheus-stack.svc.cluster.local:9090/api/v1/write"
          }
        }

        otelcol.exporter.otlp "tempo" {
          client {
            endpoint = "tempo.grafana-stack.svc.cluster.local:4317"
            tls {
              insecure = true
            }
          }
        }


    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 2Gi
        cpu: 1000m

  controller:
    type: daemonset

  configReloader:
    enabled: true

  service:
    enabled: true
    type: ClusterIP
