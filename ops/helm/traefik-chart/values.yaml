replicaCount: 2

deployment:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

image:
  repository: traefik
  tag: "3.1"
  pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  port: 80

dashboard:
  enabled: true
  entryPoints:
    - websecure
  domain: dashboard.traefik.staging.aws.webgrip.nl

ingressRoute:
  enabled: true
  entryPoints:
    - websecure
  domain: traefik.staging.aws.webgrip.nl

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

serviceAccount:
  create: true
  name: ""
  automount: true
  annotations: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

ingress:
  enabled: true
  className: "traefik"
  annotations:
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  tls:
    - hosts:
        - "traefik.staging.aws.webgrip.nl"
        - "dashboard.traefik.staging.aws.webgrip.nl"
      secretName: "traefik-tls-secret"
  hosts:
    - host: "traefik.staging.aws.webgrip.nl"
      paths:
        - path: /
          pathType: Prefix
    - host: "dashboard.traefik.staging.aws.webgrip.nl"
      paths:
        - path: /
          pathType: Prefix

certificatesResolvers:
  letsencrypt:
    acme:
      email: ryan@webgrip.nl
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web

volumes:
  - name: acme-storage
    emptyDir: {} # Replace with PersistentVolumeClaim for production
volumeMounts:
  - mountPath: /data
    name: acme-storage
