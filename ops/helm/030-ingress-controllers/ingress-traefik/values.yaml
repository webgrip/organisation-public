namespace: ingress-traefik

traefik:
  service:
    type: LoadBalancer
    spec:
      externalTrafficPolicy: Local
    annotations:
      service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
      service.beta.kubernetes.io/do-loadbalancer-tls-passthrough: "true"

  globalArguments:
    - "--global.checknewversion"
    - "--global.sendanonymoususage=false"

  ingressClass:
    enabled: true
    isDefaultClass: true
    name: ingress-traefik

  ingressRoute:
    dashboard:
      enabled: true

  ports:
    web:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true
    websecure:
      middlewares:
        - "ingress-traefik-ryan-home-ip-allow-list@kubernetescrd"
      forwardedHeaders:
        insecure: false
        trustedIPs:
          - "10.110.0.0/20"
      proxyProtocol:
        insecure: false
        trustedIPs:
          - "10.110.0.0/20"
      http3:
        enabled: true

  tracing:
    addInternals: true
    otlp:
      enabled: true

      http:
        enabled: true
        endpoint: "alloy.grafana-stack.svc.cluster.local:4318/otlp/v1/traces"
        tls:
          insecureSkipVerify: true

      grpc:
        enabled: true
        endpoint: "alloy.grafana-stack.svc.cluster.local:4317"
        insecure: true

  logs:
    general:
      level: INFO
    access:
      enabled: true
      format: json
      fields:
        general:
          defaultMode: keep
        headers:
          defaultMode: keep

  metrics:
    otlp:
      enabled: true
      grpc:
        endpoint: "alloy.grafana-stack.svc.cluster.local:4317"
        insecure: true
        tls:
          insecureSkipVerify: true

    prometheus:
      service:
        enabled: true
      disableAPICheck: false
      serviceMonitor:
        enabled: true
        metricRelabelings:
          - sourceLabels: [ __name__ ]
            separator: ;
            regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
            replacement: $1
            action: drop
        relabelings:
          - sourceLabels: [ __meta_kubernetes_pod_node_name ]
            separator: ;
            regex: ^(.*)$
            targetLabel: nodename
            replacement: $1
            action: replace
        jobLabel: traefik
        interval: 30s
        honorLabels: true
      headerLabels:
        user_id: X-User-Id
        tenant: X-Tenant
      prometheusRule:
        enabled: true
        rules:
          - alert: TraefikDown
            expr: up{job="traefik"} == 0
            for: 5m
            labels:
              context: traefik
              severity: warning
            annotations:
              summary: "Traefik Down"
              description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"
